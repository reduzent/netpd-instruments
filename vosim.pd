#N struct 3544.button float posx float posy float color;
#N struct 3544.cursor float cx float cy float cy2;
#N struct 3473-automation float yshift array variy 3473-automation-element
;
#N struct 3473-automation-element float y;
#N struct 3472.autolabel float x float y symbol lbl float color float
track;
#N canvas 626 23 441 525 10;
#N canvas 624 75 434 290 NETPD 0;
#N canvas 315 75 473 287 abslist 0;
#X text 7 13 Put a message box containing the name of the abstraction
(without the .pd suffix) for each dependency.;
#X text 6 55 For instance:;
#X text 23 84 [mysynth-voice(;
#X text 13 130 NOTE: abstractions of instruments also use netpd meta
tags and may also specify their own dependencies. unpatch resolves
dependency trees recursively.;
#X msg 151 73 unstep;
#X msg 151 95 i2mx;
#X restore 12 178 pd abslist;
#X text 111 179 <- add dependencies of your netpd instrument;
#X text 18 32 A 'version' meta tag is mandatory. unpatch uses this
information to make sure that all clients load the same version of
the instrument.;
#X text 19 78 Whenever you make changes to your instrument \, make
sure to bump the version.;
#X text 18 118 There is no predefined meaning of the three version
fields. Use them at your own will.;
#X text 16 211 The [pd abslist] tag container is optional and is used
to specify dependencies (abstractions in netpd/abs) of your instrument.
;
#X text 107 7 <- update the version of this netpd instrument;
#X msg 12 8 version 0 0 1;
#X restore 10 54 pd NETPD 2 0;
#X text 158 200 <- this manages patch state synchorization;
#X obj 10 199 netpd_head \$1 vosim;
#N canvas 1068 23 212 270 \$1-vosim 1;
#X obj 12 243 hsl 75 15 0 0 0 0 \$0-unstep-gui \$0.bli unstep 3 8 0
10 -228856 -228856 -1 0 1;
#X text 6 6 VOSIM;
#X obj 11 69 hsl 64 15 0 1 0 0 \$1-glide \$1-glide glide -2 -8 0 10
-262144 -1 -1 500 1;
#X obj 11 37 hsl 64 15 0 1 0 0 \$1-vol \$1-vol vol. -2 -8 0 10 -262144
-1 -1 5500 1;
#X obj 9 103 vsl 15 128 0 127 0 0 \$1-T_pulsewidth \$1-T_pulsewidth
T 0 -9 0 10 -262144 -1 -1 8400 0;
#X obj 94 103 vsl 15 128 0 127 0 0 \$1-N_pulses \$1-N_pulses N 0 -9
0 10 -262144 -1 -1 400 0;
#X obj 60 103 vsl 15 128 0 127 0 0 \$1-M_delay \$1-M_delay M 0 -9 0
10 -262144 -1 -1 11200 0;
#X obj 77 103 vsl 15 128 0 127 0 0 \$1-b_attenuation \$1-b_attenuation
b 0 -9 0 10 -262144 -1 -1 400 0;
#X obj 26 103 vsl 15 64 0 128 0 0 \$1-D_deviation \$1-D_deviation D
0 -9 0 10 -262144 -1 -1 5800 0;
#X obj 111 103 vsl 15 128 0 127 0 0 \$1-NM_modrate \$1-NM_modrate NM
0 -9 0 10 -262144 -1 -1 11600 1;
#X obj 43 101 vradio 15 1 0 2 \$1-mod \$1-mod empty 0 -8 0 10 -262144
-1 -1 0;
#X text 45 114 s;
#X text 45 101 n;
#X restore 10 82 pd \$1-vosim;
#X text 158 56 <- put your instrument's meta tags here;
#N canvas 35 23 1061 752 vosimdsp 0;
#N canvas 0 23 267 183 smooth 0;
#X obj 106 79 vline~;
#X obj 105 106 outlet~;
#X obj 106 26 inlet;
#X obj 106 58 pack 0 20;
#X obj 179 26 r \$0-glide;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X connect 3 0 0 0;
#X connect 4 0 3 1;
#X restore 179 352 pd smooth;
#X floatatom 187 311 8 0 0 1 M - -;
#X floatatom 263 307 8 0 0 1 T - -;
#X floatatom 404 279 5 0 999 1 b - -;
#X floatatom 349 270 5 1 999 1 N - -;
#X obj 179 221 mtof;
#X floatatom 179 201 5 0 0 0 - - -;
#X obj 263 222 mtof;
#X floatatom 263 201 5 0 0 0 - - -;
#N canvas 0 23 267 183 smooth 0;
#X obj 106 79 vline~;
#X obj 105 106 outlet~;
#X obj 106 26 inlet;
#X obj 106 58 pack 0 20;
#X obj 183 23 r \$0-glide;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X connect 3 0 0 0;
#X connect 4 0 3 1;
#X restore 263 339 pd smooth;
#X obj 179 264 expr 1/$f1;
#X obj 263 264 expr 1/$f1;
#X obj 178 478 *~ 0;
#X obj 237 449 dbtorms;
#N canvas 0 23 267 183 smooth 0;
#X obj 106 79 vline~;
#X obj 105 106 outlet~;
#X obj 106 26 inlet;
#X obj 106 58 pack 0 20;
#X obj 190 34 r \$0-glide;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X connect 3 0 0 0;
#X connect 4 0 3 1;
#X restore 405 348 pd smooth;
#X floatatom 179 243 5 0 0 0 - - -;
#X floatatom 335 225 5 0 0 0 - - -;
#X msg 179 176 154;
#X msg 263 176 72;
#N canvas 358 23 814 731 vosim 0;
#X obj 138 493 cos~;
#X obj 139 524 *~;
#X obj 137 392 wrap~;
#X obj 137 450 -~ 0.25;
#X obj 140 549 *~;
#X obj 180 509 samphold~;
#X obj 136 415 *~ 0.5;
#X obj 237 425 wrap~;
#X obj 137 342 *~;
#X obj 422 433 *~;
#X obj 423 406 clip~ 0 1;
#X obj 320 65 inlet;
#X obj 139 573 outlet~;
#X obj 484 353 *~;
#X obj 320 112 max 1;
#X obj 137 372 clip~ 0 1;
#X text 503 43 b;
#X text 329 46 N;
#X obj 320 87 int;
#X obj 136 261 phasor~;
#X text 97 128 M + NT;
#X text 470 384 damping;
#X obj 423 459 *~;
#X text 378 485 quadric decay (this is a somewhat arbitrary choice)
;
#X obj 152 125 +~;
#X obj 237 65 inlet~;
#X obj 153 65 inlet~;
#X obj 153 317 /~;
#X obj 118 229 /~;
#X text 100 341 [f1];
#X text 81 609 The stretched phasor [f1] needs to run at f1 = 1/T all
the time. It is derived from a phasor at f0 = 1/(NT+M) so the stretch/multiplication
factor x needs to be calculated according to the following:;
#X text 84 675 f1 = x * f0 ==> 1/T = x * 1/(M + NT) ==> x = (M + NT)/T
;
#X obj 501 62 inlet~;
#X text 36 230 sec => Hz;
#X text 241 43 T (sec);
#X text 153 40 M (sec);
#X text 31 263 f0 = 1/(M+NT);
#X text 23 316 x = (M + NT)/T;
#X obj 169 101 *~ 1;
#X text 316 154 changes of N should be [samphold~]ed but this would
generate a DSP loop in Pd.;
#X obj 425 355 sig~ 1;
#X obj 424 381 -~;
#X text 182 531 This gives artifacts for certain combinations of M
and T \, if b != 0 \, duh.;
#N canvas 0 23 432 350 sigview 0;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-scope 882 float 0;
#X coords 0 1 881 -1 200 140 1;
#X restore 98 60 graph;
#X obj 65 285 tabwrite~ \$0-scope;
#X msg 127 246 bang;
#X obj 171 248 metro 100;
#X obj 171 227 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 66 239 inlet~;
#X connect 2 0 1 0;
#X connect 3 0 1 0;
#X connect 4 0 3 0;
#X connect 5 0 1 0;
#X restore 259 495 pd sigview;
#X obj 238 448 *~ 2;
#X obj 238 472 clip~ 0 1;
#X obj 111 200 sig~ 1;
#X connect 0 0 1 0;
#X connect 0 0 1 1;
#X connect 1 0 4 0;
#X connect 2 0 6 0;
#X connect 3 0 0 0;
#X connect 4 0 12 0;
#X connect 5 0 4 1;
#X connect 6 0 3 0;
#X connect 6 0 7 0;
#X connect 7 0 44 0;
#X connect 8 0 15 0;
#X connect 9 0 22 0;
#X connect 9 0 22 1;
#X connect 10 0 9 0;
#X connect 10 0 9 1;
#X connect 10 0 5 0;
#X connect 11 0 18 0;
#X connect 13 0 41 1;
#X connect 14 0 15 2;
#X connect 14 0 38 1;
#X connect 15 0 2 0;
#X connect 18 0 14 0;
#X connect 19 0 8 0;
#X connect 19 0 13 0;
#X connect 24 0 27 0;
#X connect 24 0 28 1;
#X connect 25 0 27 1;
#X connect 25 0 38 0;
#X connect 26 0 24 0;
#X connect 27 0 8 1;
#X connect 28 0 19 0;
#X connect 32 0 13 1;
#X connect 38 0 24 1;
#X connect 40 0 41 0;
#X connect 41 0 10 0;
#X connect 44 0 45 0;
#X connect 45 0 5 1;
#X connect 45 0 43 0;
#X connect 46 0 28 0;
#X restore 185 407 pd vosim;
#X obj 593 13 r \$0-unstep-gui;
#X msg 593 35 vis 1;
#X obj 593 59 unstep \$1 vosim m n b;
#X obj 593 81 s \$0-vosim;
#X obj 357 29 r \$0-vosim;
#X obj 357 51 route m;
#X obj 430 58 r \$0-vosim;
#X obj 430 80 route n;
#X obj 497 58 r \$0-vosim;
#X obj 497 80 route b;
#X obj 530 172 route note;
#X obj 177 763 *~;
#X obj 235 732 dbtorms~;
#N canvas 298 255 620 253 trg_amp_flr_att_hld_rel 0;
#X obj 26 203 vline~;
#X msg 26 178 \$1 \$2 \, \$3 \$4 \$5;
#X obj 26 150 pack f f f f f;
#X obj 25 230 outlet~;
#X obj 26 13 inlet;
#X obj 26 70 f;
#X obj 103 12 inlet;
#X text 143 13 amp;
#X text 64 13 trg;
#X obj 173 13 inlet;
#X text 213 14 flr;
#X obj 245 13 inlet;
#X text 285 14 att(ms);
#X obj 338 14 inlet;
#X text 378 15 hld(ms);
#X obj 433 13 inlet;
#X text 473 13 rel(ms);
#X obj 223 67 +;
#X obj 243 44 t b f;
#X obj 250 143 +;
#X obj 266 118 t b f;
#X obj 234 189 del;
#X obj 250 166 + 2;
#X obj 234 211 0;
#X obj 199 159 b;
#X obj 199 209 1;
#X obj 201 233 outlet;
#X text 255 232 switch;
#X text 284 165 <- add at least one block because of [vline~];
#X connect 0 0 3 0;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 4 0 5 0;
#X connect 4 0 24 0;
#X connect 5 0 2 0;
#X connect 6 0 5 1;
#X connect 9 0 2 2;
#X connect 11 0 2 1;
#X connect 11 0 17 0;
#X connect 13 0 18 0;
#X connect 15 0 2 3;
#X connect 15 0 20 0;
#X connect 17 0 2 4;
#X connect 17 0 19 0;
#X connect 18 0 17 0;
#X connect 18 1 17 1;
#X connect 19 0 22 0;
#X connect 20 0 19 0;
#X connect 20 1 19 1;
#X connect 21 0 23 0;
#X connect 22 0 21 1;
#X connect 23 0 26 0;
#X connect 24 0 21 0;
#X connect 24 0 25 0;
#X connect 25 0 26 0;
#X restore 235 700 pd trg_amp_flr_att_hld_rel;
#X obj 176 826 switch~;
#X obj 511 642 loadbang;
#X obj 511 664 t b b;
#X obj 538 687 delay 1000;
#X msg 538 709 0;
#X msg 511 694 1;
#N canvas 633 654 283 124 a-level 0;
#X obj 9 38 pow 2;
#X obj 9 59 rmstodb;
#X obj 9 81 outlet;
#X obj 9 17 netpd_f \$1 a-level 0.6;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 3 0 0 0;
#X restore 260 645 pd a-level;
#N canvas 22 68 342 234 a-attack 0;
#X obj 35 206 outlet;
#X obj 35 158 +;
#X obj 46 137 t b f;
#X obj 35 182 - 40;
#X obj 35 101 rh_scalelog 20 200;
#X obj 173 101 rh_scalelog 20 200;
#X obj 35 22 netpd_f \$1 a-attack 0.01;
#X obj 173 73 route a_att;
#X obj 173 51 r \$0-voc;
#X connect 1 0 3 0;
#X connect 2 0 1 0;
#X connect 2 1 1 1;
#X connect 3 0 0 0;
#X connect 4 0 1 0;
#X connect 5 0 2 0;
#X connect 6 0 4 0;
#X connect 7 0 5 0;
#X connect 8 0 7 0;
#X restore 341 632 pd a-attack;
#N canvas 22 68 342 234 a-hold 0;
#X obj 35 206 outlet;
#X obj 35 158 +;
#X obj 46 137 t b f;
#X obj 35 180 - 200;
#X obj 35 101 rh_scalelog 100 1000;
#X obj 187 101 rh_scalelog 100 1000;
#X obj 35 22 netpd_f \$1 a-hold 0.01;
#X obj 187 73 route a_hold;
#X obj 187 51 r \$0-voc;
#X connect 1 0 3 0;
#X connect 2 0 1 0;
#X connect 2 1 1 1;
#X connect 3 0 0 0;
#X connect 4 0 1 0;
#X connect 5 0 2 0;
#X connect 6 0 4 0;
#X connect 7 0 5 0;
#X connect 8 0 7 0;
#X restore 376 654 pd a-hold;
#N canvas 22 68 342 234 a-release 0;
#X obj 35 206 outlet;
#X obj 35 158 +;
#X obj 46 137 t b f;
#X obj 35 180 - 200;
#X obj 35 101 rh_scalelog 100 3000;
#X obj 191 100 rh_scalelog 100 3000;
#X obj 35 22 netpd_f \$1 a-release 0.51;
#X obj 191 73 route a_rel;
#X obj 191 51 r \$0-voc;
#X connect 1 0 3 0;
#X connect 2 0 1 0;
#X connect 2 1 1 1;
#X connect 3 0 0 0;
#X connect 4 0 1 0;
#X connect 5 0 2 0;
#X connect 6 0 4 0;
#X connect 7 0 5 0;
#X connect 8 0 7 0;
#X restore 412 676 pd a-release;
#X floatatom 260 666 5 0 0 0 - - -;
#X text 258 622 Amp Envelope;
#X obj 176 798 i2mx \$1 vosim;
#X obj 530 150 r \$0-vosim;
#X obj 530 215 mtof;
#X floatatom 530 195 5 0 0 0 - - -;
#X floatatom 553 247 5 0 0 0 - - -;
#X obj 435 120 * 10;
#X obj 75 247 osc~;
#X obj 164 379 +~;
#X obj 601 200 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 351 347 line;
#X floatatom 116 305 5 0 0 0 - - -;
#X obj 727 143 vsl 15 128 1 16 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 0 1;
#X floatatom 685 316 5 0 0 0 - - -;
#X msg 616 244 2;
#X obj 533 294 expr 1/$f1;
#X obj 151 81 * 200;
#X obj 553 268 * 1;
#X obj 618 327 int;
#X floatatom 228 202 5 0 0 0 - - -;
#X obj 560 322 /;
#X obj 151 102 s \$0-glide;
#X msg 349 327 \$1 20;
#X obj 135 40 netpd_f \$1 glide 0.1;
#X obj 286 390 netpd_f \$1 vol 0.75;
#X obj 316 418 * 100;
#X obj 358 95 expr 1/$f1;
#X obj 360 286 +;
#X obj 393 188 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 41 416 mod sin/noise;
#X obj 511 430 netpd_f \$1 b_attenuation 0.75;
#X obj 110 257 netpd_f \$1 D_deviation 0.75;
#X obj 31 122 netpd_f \$1 NM_modrate 0.75;
#X obj 201 331 * 1;
#X obj 14 228 noise~;
#X obj 14 250 lop~;
#X floatatom 11 186 5 0 0 0 - - -;
#X obj 442 299 +;
#X obj 442 199 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 11 206 * 100;
#X obj 38 4 netpd_f \$1 mod;
#X obj 38 25 select 0 1;
#X obj 53 69 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 77 67 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 29 301 *~;
#X msg 70 166 0;
#X msg 99 166 1;
#X obj 60 314 *~;
#X msg 106 196 0;
#X msg 135 196 1;
#X obj 114 281 mtof;
#X obj 120 329 expr 1/$f1;
#X obj 58 362 *~;
#X obj 342 248 netpd_f \$1 N_pulses 1;
#X floatatom 54 179 5 0 0 0 - - -;
#X obj 52 155 mtof;
#N canvas 0 23 484 676 tests 0;
#X msg 47 95 960 0 1410 0 655 511 0 75 8 1 550 110;
#X obj 47 115 unpack f f f f f f f f f f f f;
#X obj 47 624 s \$1-T_pulsewidth;
#X obj 79 542 s \$1-M_delay;
#X obj 111 460 s \$1-D_deviation;
#X obj 47 604 ftom;
#X obj 47 584 expr 1/$f1;
#X obj 79 522 ftom;
#X obj 79 502 expr 1/$f1;
#X obj 47 565 * 1e-06;
#X obj 79 483 * 1e-06;
#X obj 111 440 ftom;
#X obj 111 420 expr 1/$f1;
#X obj 111 401 * 1e-06;
#X text 50 12 T DT M DM D A DA b N S NM NP;
#X obj 175 318 s \$1-N_pulses;
#X obj 159 381 s \$1-b_attenuation;
#X obj 159 361 * 127;
#X obj 159 340 * 0.01;
#X obj 207 277 ftom;
#X obj 207 257 expr 1/$f1;
#X obj 207 233 * 1e-06;
#X obj 207 297 s \$1-NM_modrate;
#X obj 207 170 *;
#X obj 207 192 +;
#X obj 207 213 *;
#X msg 47 77 200 0 200 0 100 50 250 75 1 0 120 600;
#X msg 47 40 960 0 140 0 60 450 61 75 1 1 152 302;
#X msg 53 59 960 0 140 0 116 511 0 75 1 1 152 1522;
#X obj 255 155 s \$1-mod;
#X connect 0 0 1 0;
#X connect 1 0 9 0;
#X connect 1 0 23 0;
#X connect 1 2 10 0;
#X connect 1 2 24 1;
#X connect 1 4 13 0;
#X connect 1 7 18 0;
#X connect 1 8 15 0;
#X connect 1 8 23 1;
#X connect 1 9 29 0;
#X connect 1 10 25 1;
#X connect 5 0 2 0;
#X connect 6 0 5 0;
#X connect 7 0 3 0;
#X connect 8 0 7 0;
#X connect 9 0 6 0;
#X connect 10 0 8 0;
#X connect 11 0 4 0;
#X connect 12 0 11 0;
#X connect 13 0 12 0;
#X connect 17 0 16 0;
#X connect 18 0 17 0;
#X connect 19 0 22 0;
#X connect 20 0 19 0;
#X connect 21 0 20 0;
#X connect 23 0 24 0;
#X connect 24 0 25 0;
#X connect 25 0 21 0;
#X connect 26 0 1 0;
#X connect 27 0 1 0;
#X connect 28 0 1 0;
#X restore 753 14 pd tests;
#X obj 359 72 * 100;
#X obj 195 292 +;
#X obj 313 113 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 511 451 * 1;
#X obj 496 100 * 127;
#X floatatom 369 308 5 0 0 0 - - -;
#X obj 250 143 netpd_f \$1 T_pulsewidth 95;
#X obj 128 155 netpd_f \$1 M_delay 75;
#X connect 0 0 53 1;
#X connect 1 0 78 0;
#X connect 2 0 9 0;
#X connect 3 0 82 0;
#X connect 4 0 72 0;
#X connect 5 0 15 0;
#X connect 6 0 5 0;
#X connect 7 0 16 0;
#X connect 8 0 7 0;
#X connect 9 0 19 1;
#X connect 10 0 103 0;
#X connect 11 0 2 0;
#X connect 12 0 46 0;
#X connect 12 0 46 1;
#X connect 13 0 12 1;
#X connect 14 0 19 3;
#X connect 15 0 10 0;
#X connect 16 0 11 0;
#X connect 17 0 6 0;
#X connect 18 0 8 0;
#X connect 19 0 12 0;
#X connect 20 0 21 0;
#X connect 21 0 22 0;
#X connect 22 0 23 0;
#X connect 24 0 25 0;
#X connect 25 0 102 0;
#X connect 26 0 27 0;
#X connect 27 0 51 0;
#X connect 28 0 29 0;
#X connect 29 0 106 0;
#X connect 30 0 49 0;
#X connect 31 0 46 0;
#X connect 31 0 46 1;
#X connect 33 0 32 0;
#X connect 35 0 36 0;
#X connect 36 0 39 0;
#X connect 36 1 37 0;
#X connect 37 0 38 0;
#X connect 38 0 46 2;
#X connect 39 0 46 2;
#X connect 40 0 33 1;
#X connect 40 0 44 0;
#X connect 41 0 33 3;
#X connect 42 0 33 4;
#X connect 43 0 33 5;
#X connect 46 0 34 0;
#X connect 47 0 30 0;
#X connect 48 0 50 0;
#X connect 49 0 48 0;
#X connect 50 0 16 0;
#X connect 50 0 59 0;
#X connect 50 0 62 0;
#X connect 51 0 72 1;
#X connect 51 0 73 0;
#X connect 52 0 92 0;
#X connect 53 0 19 0;
#X connect 54 0 50 0;
#X connect 55 0 19 2;
#X connect 56 0 96 0;
#X connect 57 0 58 0;
#X connect 58 0 54 0;
#X connect 58 0 59 0;
#X connect 58 0 63 0;
#X connect 60 0 65 0;
#X connect 61 0 66 0;
#X connect 62 0 60 0;
#X connect 63 0 4 0;
#X connect 63 0 65 1;
#X connect 64 0 78 1;
#X connect 67 0 55 0;
#X connect 68 0 61 0;
#X connect 69 0 70 0;
#X connect 70 0 13 0;
#X connect 71 0 103 1;
#X connect 71 0 104 0;
#X connect 72 0 107 0;
#X connect 73 0 4 0;
#X connect 75 0 105 0;
#X connect 76 0 95 0;
#X connect 77 0 81 0;
#X connect 77 0 100 0;
#X connect 78 0 0 0;
#X connect 79 0 80 0;
#X connect 80 0 89 0;
#X connect 81 0 84 0;
#X connect 82 0 14 0;
#X connect 83 0 3 0;
#X connect 84 0 80 1;
#X connect 85 0 86 0;
#X connect 86 0 88 0;
#X connect 86 1 87 0;
#X connect 87 0 90 0;
#X connect 87 0 91 0;
#X connect 88 0 93 0;
#X connect 88 0 94 0;
#X connect 89 0 97 0;
#X connect 90 0 89 1;
#X connect 91 0 92 1;
#X connect 92 0 97 0;
#X connect 93 0 92 1;
#X connect 94 0 89 1;
#X connect 95 0 56 0;
#X connect 96 0 97 1;
#X connect 97 0 53 0;
#X connect 98 0 4 0;
#X connect 99 0 52 0;
#X connect 100 0 99 0;
#X connect 102 0 71 0;
#X connect 103 0 1 0;
#X connect 104 0 15 0;
#X connect 105 0 3 0;
#X connect 106 0 82 1;
#X connect 106 0 83 0;
#X connect 107 0 67 0;
#X connect 108 0 8 0;
#X connect 109 0 6 0;
#X restore 11 142 pd vosimdsp;
#X text 159 84 <- GUI;
#N canvas 0 23 485 387 about 0;
#X text 14 14 vosim~;
#X text 13 33 Abstraction implementing the VOSIM sound synthesis algorithm
after Kaegi \, Templaars. [1];
#X text 15 118 Each pulse additionally can be damped according to a
factor b.;
#X text 13 154 Inlets are provided for M \, T \, N and b. All inlets
except the one for N are signal inlets to allow smooth parameter changes.
;
#X text 14 69 VOSIM signals cosist of a number (N) of sin^2 pulses
with period T each \, followed by a silent period of length M. [vosim~]
expects M and T in units of seconds.;
#X text 14 200 [1] Kaegi \, W. \, and S. Tempelaars \, ``Vosim--a new
sound synthesis system \, '' Journal of the Audio Engineering Society
\, vol. 26 \, no. 6 \, pp. 418-24 \, 1978;
#X text 20 323 Andy Farnell's tweaked version from mailing list;
#X text 19 349 adapted for netpd by beem 2020;
#X restore 11 240 pd about vosim;
